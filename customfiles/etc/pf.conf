# /etc/pf.conf
# https://www.freebsd.org/cgi/man.cgi?query=pfctl
# https://www.freebsd.org/cgi/man.cgi?query=pf.conf

# macros
protocols       = "{ tcp, udp }"
blocked_ports   = "{ syslog, epmd, amqp, couchdb, 5000, 8000, 4003, ssh }"
tcp_services    = "{ domain, http, https, smtp, 2200, amqp, bgp }"
udp_services    = "{ domain, 9993 }"
martians        = "{ 127.0.0.0/8, 169.254.0.0/16, 192.0.2.0/24, \
                     192.168.0.0/16, 172.16.0.0/12, \
                     0.0.0.0/8, 240.0.0.0/4 }"

# interfaces
extl_if="vtnet0"
intl_if="lo0"
jail_if="lo1"
zero_if="ztcfi0n5bogmok8"

# networks
intl_net = $intl_if:network
jail_net = $jail_if:network
internet = $extl_if:network
zero_net = "fc36:c375:a2e2::/40"

# limits
# bigger state tables help erlang receive sockets faster
# https://blog.tyk.nu/blog/fun-with-freebsd-listen-queue-overflow/
set limit { states 200000, frags 40000, src-nodes 40000 }
set timeout { adaptive.start 180000, adaptive.end 200000 }

# table is also hard coded in pf.blocklist.j2 as we have a few repeat
# offenders that seem unable to manage their own infrastructure
table <blocklist> persist file "/etc/pf.blocklist"

# clean packets are happy packets
scrub in all


# jails are allowed outbound connections but not inbound
# these should be set up explicitly using spiped or similar
nat on $extl_if proto $protocols from   $jail_net to any -> ($extl_if:0)
nat on $extl_if proto $protocols from   $zero_net to any -> ($extl_if:0)

# you shall not pass
# block in all

# block traffic from RFC1918 networks but go easy on NAT-using dev VMs
block drop in  quick on $extl_if from $martians to any
block drop out quick on $extl_if from any to $martians
block drop in  log quick on $extl_if proto { udp, tcp } from any to any port $blocked_ports

# handle script kiddies and other nasties on demand
block drop in quick on $extl_if from <blocklist> to any

# o ye of little faith
pass in all
pass out all

